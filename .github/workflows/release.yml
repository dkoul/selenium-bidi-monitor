name: Build and Release SeleniumIQ

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        
    - name: Build with Maven
      run: mvn clean compile package -DskipTests
      
    - name: Run tests
      run: mvn test
      
    - name: Create JAR with dependencies
      run: mvn assembly:single
      
    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: SeleniumIQ ${{ steps.get_version.outputs.VERSION }}
        body: |
          ## SeleniumIQ v${{ steps.get_version.outputs.VERSION }}
          
          ### ðŸš€ What's New
          - AI-powered test intelligence for Selenium WebDriver
          - Real-time browser event monitoring with BiDi protocol
          - Beautiful HTML and JSON reports
          - Support for OpenAI GPT-4 and Ollama (local AI)
          
          ### ðŸ“¦ Installation
          
          **Option 1: Download JAR (Recommended)**
          1. Download `seleniumiq-core-${{ steps.get_version.outputs.VERSION }}.jar`
          2. Add to your project's `lib/` directory
          3. Add system dependency to your `pom.xml`
          
          **Option 2: Use with JitPack**
          ```xml
          <repositories>
              <repository>
                  <id>jitpack.io</id>
                  <url>https://jitpack.io</url>
              </repository>
          </repositories>
          
          <dependency>
              <groupId>com.github.yourusername</groupId>
              <artifactId>seleniumiq</artifactId>
              <version>${{ steps.get_version.outputs.VERSION }}</version>
          </dependency>
          ```
          
          ### ðŸ”§ Quick Start
          ```java
          @ExtendWith(SeleniumIQWatcher.class)
          public class MyTest {
              @BeforeEach
              void setUp() {
                  ChromeOptions options = new ChromeOptions();
                  SeleniumIQ.enableMonitoring(options);
                  driver = new ChromeDriver(options);
              }
          }
          ```
          
          See the [README](README.md) for full documentation.
        draft: false
        prerelease: false
        
    - name: Upload JAR to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/seleniumiq-core-${{ steps.get_version.outputs.VERSION }}.jar
        asset_name: seleniumiq-core-${{ steps.get_version.outputs.VERSION }}.jar
        asset_content_type: application/java-archive
        
    - name: Upload JAR with Dependencies to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/seleniumiq-core-${{ steps.get_version.outputs.VERSION }}-jar-with-dependencies.jar
        asset_name: seleniumiq-core-${{ steps.get_version.outputs.VERSION }}-standalone.jar
        asset_content_type: application/java-archive